
import logging
from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

API_TOKEN = "YOUR_BOT_TOKEN"
CHANNEL_USERNAME = "@SlivRoomCourses"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    keyboard = InlineKeyboardMarkup(row_width=1)
    button = InlineKeyboardButton(text="‚úÖ –Ø –ø—ñ–¥–ø–∏—Å–∞–≤—Å—è", callback_data="check_sub")
    keyboard.add(button)
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π PDF-–≥–∞–π–¥, –ø—ñ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª —Ç–∞ –Ω–∞—Ç–∏—Å–Ω–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ.", reply_markup=keyboard)

@dp.callback_query_handler(lambda c: c.data == 'check_sub')
async def check_subscription(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    try:
        member = await bot.get_chat_member(CHANNEL_USERNAME, user_id)
        if member.status in ['member', 'creator', 'administrator']:
            await bot.answer_callback_query(callback_query.id)
            await bot.send_message(user_id, "–û—Å—å —Ç–≤—ñ–π PDF-–≥–∞–π–¥ üéÅ:
https://your_pdf_link_here.com/guide.pdf")
        else:
            await bot.answer_callback_query(callback_query.id, text="–°–ø–µ—Ä—à—É –ø—ñ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!", show_alert=True)
    except:
        await bot.answer_callback_query(callback_query.id, text="–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—ñ–¥–ø–∏—Å–∫–∏. –°–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ.", show_alert=True)

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
